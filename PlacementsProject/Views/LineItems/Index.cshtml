@using Microsoft.CodeAnalysis.CSharp.Syntax
@model PlacementsProject.Models.ViewModels.LineItemIndexViewModel

@{
    ViewData["Title"] = "Line Items";
}

<h2>Line Items</h2>
<form asp-action="Index" method="get">
    <p>
        Find by name: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
        <input type="submit" value="Search" class="btn btn-default" /> |
        <a asp-action="Index">Back to Full List</a>
    </p>
</form>

<table class="table">
    <thead>
    <tr>
        <th>
            Id 
            <a asp-action="Index" asp-route-sortOrder="LineItemIdAsc" asp-route-searchString="@ViewData["CurrentFilter"]">
                <i class="glyphicon glyphicon-triangle-top"></i>
            </a>
            <a asp-action="Index" asp-route-sortOrder="LineItemIdDesc" asp-route-searchString="@ViewData["CurrentFilter"]">
                <i class="glyphicon glyphicon-triangle-bottom"></i>
            </a>
        </th>
        <th>
            Campaign Id
        </th>
        <th>
            Campaign Name
            <a asp-action="Index" asp-route-sortOrder="CampaignNameAsc" asp-route-searchString="@ViewData["CurrentFilter"]">
                <i class="glyphicon glyphicon-triangle-top"></i>
            </a>
            <a asp-action="Index" asp-route-sortOrder="CampaignNameDesc" asp-route-searchString="@ViewData["CurrentFilter"]">
                <i class="glyphicon glyphicon-triangle-bottom"></i>
            </a>
        </th>
        <th>
            Booked Amount
            <a asp-action="Index" asp-route-sortOrder="BookedAmountAsc" asp-route-searchString="@ViewData["CurrentFilter"]">
                <i class="glyphicon glyphicon-triangle-top"></i>
            </a>
            <a asp-action="Index" asp-route-sortOrder="BookedAmountDesc" asp-route-searchString="@ViewData["CurrentFilter"]">
                <i class="glyphicon glyphicon-triangle-bottom"></i>
            </a>
        </th>
        <th>
            Adjusted Amount
            <a asp-action="Index" asp-route-sortOrder="AdjustedAmountAsc" asp-route-searchString="@ViewData["CurrentFilter"]">
                <i class="glyphicon glyphicon-triangle-top"></i>
            </a>
            <a asp-action="Index" asp-route-sortOrder="AdjustedAmountDesc" asp-route-searchString="@ViewData["CurrentFilter"]">
                <i class="glyphicon glyphicon-triangle-bottom"></i>
            </a>
        </th>
        <th>
            Actual Amount
            <a asp-action="Index" asp-route-sortOrder="ActualAmountAsc" asp-route-searchString="@ViewData["CurrentFilter"]">
                <i class="glyphicon glyphicon-triangle-top"></i>
            </a>
            <a asp-action="Index" asp-route-sortOrder="ActualAmountDesc" asp-route-searchString="@ViewData["CurrentFilter"]">
                <i class="glyphicon glyphicon-triangle-bottom"></i>
            </a>
        </th>
        <th>
            Reviewed
            <a asp-action="Index" asp-route-sortOrder="ReviewedAsc" asp-route-searchString="@ViewData["CurrentFilter"]">
                <i class="glyphicon glyphicon-triangle-top"></i>
            </a>
            <a asp-action="Index" asp-route-sortOrder="ReviewedDesc" asp-route-searchString="@ViewData["CurrentFilter"]">
                <i class="glyphicon glyphicon-triangle-bottom"></i>
            </a>
        </th>
        <th>
            Campaign Reviewed
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Id)</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CampaignId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CampaignName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BookedAmount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AdjustedAmount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ActualAmount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Reviewed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CampaignReviewed)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                    @if (!(item.Reviewed || item.CampaignReviewed))
                    {
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
                </td>
            </tr>
        }
        <tr>
            <td></td>
            <td></td>
            <td><strong>Totals (all pages)</strong></td>
            <td><strong>@Model.TotalBookedAmount</strong></td>
            <td><strong>@Model.TotalBookedAmount</strong></td>
            <td><strong>@Model.TotalBookedAmount</strong></td>
            <td></td>
            <td></td>
            <td></td>
        </tr>
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-searchString="@ViewData["CurrentFilter"]"
   asp-route-page="@(Model.PageIndex - 1)"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-searchString="@ViewData["CurrentFilter"]"
   asp-route-page="@(Model.PageIndex + 1)"
   class="btn btn-default @nextDisabled">
    Next
</a>